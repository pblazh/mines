{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name mines.screens, :imports nil, :requires {S clojure.string, clojure.string clojure.string, r reagent.core, reagent.core reagent.core, cljs.core.async cljs.core.async, mines.game mines.game, mines.channels mines.channels}, :uses {index->position mines.game, get-score mines.game, position->index mines.game, EVENTCNANNEL mines.channels, put! cljs.core.async}, :defs {intro {:protocol-inline nil, :meta {:file "/Users/pavel/work/clojure/seabattle/src/mines/screens.cljs", :line 95, :column 7, :end-line 95, :end-column 12, :arglists (quote ([done data]))}, :name mines.screens/intro, :variadic false, :file "src/mines/screens.cljs", :end-column 12, :method-params ([done data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 95, :end-line 95, :max-fixed-arity 2, :fn-var true, :arglists (quote ([done data]))}, game-field {:protocol-inline nil, :meta {:file "/Users/pavel/work/clojure/seabattle/src/mines/screens.cljs", :line 64, :column 7, :end-line 64, :end-column 17, :arglists (quote ([data]))}, :name mines.screens/game-field, :variadic false, :file "src/mines/screens.cljs", :end-column 17, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data]))}, revealed-square {:protocol-inline nil, :meta {:file "/Users/pavel/work/clojure/seabattle/src/mines/screens.cljs", :line 57, :column 7, :end-line 57, :end-column 22, :arglists (quote ([props]))}, :name mines.screens/revealed-square, :variadic false, :file "src/mines/screens.cljs", :end-column 22, :method-params ([props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 1, :fn-var true, :arglists (quote ([props]))}, sign {:protocol-inline nil, :meta {:file "/Users/pavel/work/clojure/seabattle/src/mines/screens.cljs", :line 8, :column 7, :end-line 8, :end-column 11, :arglists (quote ([which]))}, :name mines.screens/sign, :variadic false, :file "src/mines/screens.cljs", :end-column 11, :method-params ([which]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([which]))}, timer {:protocol-inline nil, :meta {:file "/Users/pavel/work/clojure/seabattle/src/mines/screens.cljs", :line 103, :column 7, :end-line 103, :end-column 12, :arglists (quote ([value]))}, :name mines.screens/timer, :variadic false, :file "src/mines/screens.cljs", :end-column 12, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 103, :end-line 103, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, revealed-sign {:protocol-inline nil, :meta {:file "/Users/pavel/work/clojure/seabattle/src/mines/screens.cljs", :line 14, :column 7, :end-line 14, :end-column 20, :arglists (quote ([which]))}, :name mines.screens/revealed-sign, :variadic false, :file "src/mines/screens.cljs", :end-column 20, :method-params ([which]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([which]))}, game {:protocol-inline nil, :meta {:file "/Users/pavel/work/clojure/seabattle/src/mines/screens.cljs", :line 118, :column 7, :end-line 118, :end-column 11, :arglists (quote ([done data]))}, :name mines.screens/game, :variadic false, :file "src/mines/screens.cljs", :end-column 11, :method-params ([done data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 118, :end-line 118, :max-fixed-arity 2, :fn-var true, :arglists (quote ([done data]))}, is-not-used? {:protocol-inline nil, :meta {:file "/Users/pavel/work/clojure/seabattle/src/mines/screens.cljs", :line 24, :column 7, :end-line 24, :end-column 19, :arglists (quote ([which]))}, :name mines.screens/is-not-used?, :variadic false, :file "src/mines/screens.cljs", :end-column 19, :method-params ([which]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([which]))}, game-square {:protocol-inline nil, :meta {:file "/Users/pavel/work/clojure/seabattle/src/mines/screens.cljs", :line 45, :column 7, :end-line 45, :end-column 18, :arglists (quote ([props]))}, :name mines.screens/game-square, :variadic false, :file "src/mines/screens.cljs", :end-column 18, :method-params ([props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 1, :fn-var true, :arglists (quote ([props]))}, score {:protocol-inline nil, :meta {:file "/Users/pavel/work/clojure/seabattle/src/mines/screens.cljs", :line 100, :column 7, :end-line 100, :end-column 12, :arglists (quote ([value]))}, :name mines.screens/score, :variadic false, :file "src/mines/screens.cljs", :end-column 12, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 100, :end-line 100, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, game-square-style {:protocol-inline nil, :meta {:file "/Users/pavel/work/clojure/seabattle/src/mines/screens.cljs", :line 27, :column 7, :end-line 27, :end-column 24, :arglists (quote ([props]))}, :name mines.screens/game-square-style, :variadic false, :file "src/mines/screens.cljs", :end-column 24, :method-params ([props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([props]))}, score-panel {:protocol-inline nil, :meta {:file "/Users/pavel/work/clojure/seabattle/src/mines/screens.cljs", :line 110, :column 7, :end-line 110, :end-column 18, :arglists (quote ([data]))}, :name mines.screens/score-panel, :variadic false, :file "src/mines/screens.cljs", :end-column 18, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 110, :end-line 110, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data]))}, is-not-bomb? {:protocol-inline nil, :meta {:file "/Users/pavel/work/clojure/seabattle/src/mines/screens.cljs", :line 21, :column 7, :end-line 21, :end-column 19, :arglists (quote ([which]))}, :name mines.screens/is-not-bomb?, :variadic false, :file "src/mines/screens.cljs", :end-column 19, :method-params ([which]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([which]))}}, :require-macros {r reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:y :border-style :line-height :animation-delay :try-square! :gamefield :won :color :text-align :key :bottom :else :font-size :button :top :font-weight :float :columns :value :section :time :background-color :width :cursor :on-context-menu :perspective :on-click :size :style :rows :div :class :score :padding :initial :perspective-origin :text-shadow :display :position :complete :x :letter-width :h1 :bombs :height :mark-square! :left :span}, :order [:else :x :y :value :complete :won :size :border-style :line-height :animation-delay :text-align :font-size :top :background-color :width :cursor :position :letter-width :height :left :div :class :style :on-click :on-context-menu :try-square! :key :mark-square! :initial :columns :rows :section :perspective-origin :perspective :gamefield :h1 :button :span :color :font-weight :float :display :text-shadow :padding :bombs :score :time :bottom]}, :doc nil}