{:rename-macros {}, :renames {}, :use-macros {log mines.macros, breakpoint mines.macros, inspect mines.macros}, :excludes #{}, :name mines.core, :imports nil, :requires {s clojure.string, clojure.string clojure.string, r reagent.core, reagent.core reagent.core, cljs.core.async cljs.core.async, screens mines.screens, mines.screens mines.screens, mines.game mines.game, mines.channels mines.channels}, :uses {initial-state mines.game, <! cljs.core.async, chan cljs.core.async, start mines.channels, try-complete mines.game, EVENTCNANNEL mines.channels, try-square mines.game, mark-square mines.game, put! cljs.core.async}, :defs {app-state {:name mines.core/app-state, :file "src/mines/core.cljs", :line 12, :column 1, :end-line 12, :end-column 19, :meta {:file "/Users/pavel/work/clojure/seabattle/src/mines/core.cljs", :line 12, :column 10, :end-line 12, :end-column 19}}, time-tick {:protocol-inline nil, :meta {:file "/Users/pavel/work/clojure/seabattle/src/mines/core.cljs", :line 14, :column 7, :end-line 14, :end-column 16, :arglists (quote ([]))}, :name mines.core/time-tick, :variadic false, :file "src/mines/core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, start-game {:protocol-inline nil, :meta {:file "/Users/pavel/work/clojure/seabattle/src/mines/core.cljs", :line 21, :column 7, :end-line 21, :end-column 17, :arglists (quote ([]))}, :name mines.core/start-game, :variadic false, :file "src/mines/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, EVENTS {:name mines.core/EVENTS, :file "src/mines/core.cljs", :line 26, :column 1, :end-line 26, :end-column 12, :meta {:file "/Users/pavel/work/clojure/seabattle/src/mines/core.cljs", :line 26, :column 6, :end-line 26, :end-column 12}}, app {:protocol-inline nil, :meta {:file "/Users/pavel/work/clojure/seabattle/src/mines/core.cljs", :line 34, :column 7, :end-line 34, :end-column 10, :arglists (quote ([]))}, :name mines.core/app, :variadic false, :file "src/mines/core.cljs", :end-column 10, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, on-js-reload {:protocol-inline nil, :meta {:file "/Users/pavel/work/clojure/seabattle/src/mines/core.cljs", :line 44, :column 7, :end-line 44, :end-column 19, :arglists (quote ([]))}, :name mines.core/on-js-reload, :variadic false, :file "src/mines/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {mines.macros mines.macros, r reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:try-square! :screen :else :screen-intro :reset! :time :start :set-screen! :div :screen-game :complete :mark-square!}, :order [:screen :screen-intro :complete :time :reset! :set-screen! :screen-game :start :try-square! :mark-square! :else :div]}, :doc nil}